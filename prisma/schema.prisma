// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}



model Student {
  id            String       @default(cuid()) @id
  firstName     String
  middleName    String?
  secondName    String
  dateOfBirth   DateTime
  genderId      Int
  gradeAvg      Float
  nationality   String
  passSn        String
  passDivCode   String
  passIssueDate DateTime
  passIssueBy   String
  birthplace    String
  residentialAddress String
  registrationAddress String
  phone         String
  email         String?   @unique
  snils         String
  parentsContacts   String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  specialities  StudentsSpecialities[]
}
model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  role          String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}

model StudentsSpecialities {
    speciality      Speciality @relation(fields: [specialityId],references: [id])
    specialityId    String
    student         Student @relation(fields: [studentId], references: [id])
    studentId       String
    isOriginal      Boolean
    isBudget        Boolean
    createdAt     DateTime  @default(now()) @map(name: "created_at")
    @@id([studentId,specialityId])
}

model Speciality {
  id            String       @default(cuid()) @id
  name          String?
  students      StudentsSpecialities[]
}